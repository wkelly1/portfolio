@tailwind base;
@tailwind components;
@tailwind utilities;
@import url("https://fonts.googleapis.com/css2?family=Source+Code+Pro:ital,wght@0,200;0,300;0,400;0,500;0,600;0,700;0,900;1,200;1,300;1,400;1,500;1,600;1,700;1,900&display=swap");

.btn-arrow:hover .arrow svg g path:last-of-type {
  transition: all 0.05s ease;
  opacity: 1;
}

.btn-arrow:hover .arrow svg g path:first-of-type {
  transition: all 0.1s ease;
  transform: translateX(3.2px);
}

.btn-arrow:hover .arrowLg svg g path:last-of-type {
  transition: all 0.05s ease;
  opacity: 1;
}

.btn-arrow:hover .arrowLg svg g path:first-of-type {
  transition: all 0.1s ease;
  transform: translateX(10px);
}

.project {
  position: relative;
  display: inline-block;
}

.project:after {
  top: 0;
  left: 0;
  position: absolute;
  width: 100%;
  height: 100%;
  content: " ";
  box-sizing: border-box;
  box-shadow: -8px 8px 8px 5px #5eead4;
  border-radius: 5px;
  opacity: 0;
  transition: opacity 0.2s ease;
}

.project:hover::after {
  opacity: 1;
}

.animate-flash {
  animation: flash 1s infinite;
}

@keyframes flash {
  0%,
  49% {
    opacity: 0;
  }
  50%,
  100% {
    opacity: 1;
  }
}

.animation-typing {
  box-shadow: 2px 0 0 white;
  width: 23ch;
  overflow: hidden;
  color: #fff;
  white-space: nowrap;
  animation: invisible 4.5s, caret 0.5s step-end infinite alternate,
    type 5s steps(23, end) 4.5s;
}

.animation-typing-hide {
  box-shadow: 2px 0 0 white;
  width: 23ch;
  overflow: hidden;
  color: #fff;
  white-space: nowrap;
  animation: caret 0.5s step-end infinite alternate, type 5s steps(23, end),
    hidden 0.5s ease 4.5s infinite;
}

@keyframes invisible {
  0%,
  100% {
    opacity: 0;
  }
}

@keyframes hidden {
  0%,
  100% {
    box-shadow: 0px 0 0 transparent;
  }
}

@keyframes type {
  0% {
    width: 0;
  }
}
@keyframes caret {
  50% {
    box-shadow: 0.6em 0 0 transparent;
  }
}

.contact-enter {
  opacity: 0;
  transform: translateX(100%);
  display: "flex";
}
.contact-enter-active {
  opacity: 1;
  transform: translateX(0);
  transition: opacity 300ms, transform 300ms;
  height: 100vh;
  display: "flex";
}
.contact-exit {
  opacity: 1;
  display: "flex";
}
.contact-exit-active {
  opacity: 0;
  transform: translateX(100%);
  transition: opacity 300ms, transform 300ms;
  display: "flex";
}

.fade-enter {
  opacity: 0;
  transform: scale(95%);
}
.fade-enter-active {
  opacity: 1;
  transform: scale(100%);
  transition: opacity 300ms, transform 300ms;
}
.fade-exit {
  opacity: 1;
  transform: scale(100%);
}
.fade-exit-active {
  opacity: 0;
  transform: scale(95%);
  transition: opacity 300ms, transform 300ms;
}

/* Customize the label (the container) */
.checkbox {
  display: flex;
  align-items: center;
  position: relative;
  padding-left: 35px;
  cursor: pointer;
  font-size: 22px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default checkbox */
.checkbox input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Create a custom checkbox */
.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 28px;
  width: 28px;
  border-radius: 4px;
  border: 2px solid #071030;
}

/* When the checkbox is checked, add a blue background */
.checkbox input:checked ~ .checkmark {
  background-color: #2563eb;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.checkbox input:checked ~ .checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.checkbox .checkmark:after {
  left: 9.5px;
  top: 7px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}
